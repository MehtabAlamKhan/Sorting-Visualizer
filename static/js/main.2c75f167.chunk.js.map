{"version":3,"sources":["Components/SortingAlogorithms.js","Components/SortingVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["length","heapSortCall","array","order","animations","i","Math","floor","heap_root","swap","push","heapSort","l","r","largest","input","index_A","index_B","temp","QuickSortCall","ani","animation","animation2","QuickSort","h","j","pivot","partition","mergeSort","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","k","doMerge","TIMER","randomNumbers","min","max","random","SortingVisualizer","useState","setArray","disableButton","setdisableButton","auxArray","setAuxArray","slider","setSlider","width","setWidth","setOrder","useEffect","console","log","resetArray","map","v","window","screen","height","changeColor","arr","arrayBars","document","getElementsByClassName","style","backgroundColor","className","disabled","onClick","type","value","onChange","e","target","name","checked","htmlFor","id","SortingAlgorithms","myNum","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","setTimeout","newHeight","small","large","quickSort","bubbleSort","h1","h2","arrayn","current","insertionSort","isChange","bar","idx","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2c75f167.chunk.js","sourcesContent":["//-----------------------------INSERTION SORT-----------------------------\r\nexport function insertionSortCall(arrayn, order) {\r\n  const animations = [];\r\n  insertionSort(arrayn, animations, order);\r\n  // console.log(order);\r\n  return animations;\r\n}\r\n\r\nfunction insertionSort(array, animations, order) {\r\n  for (var i = 1; i < array.length; i++) {\r\n    let current = array[i];\r\n    var j = i - 1;\r\n    animations.push([i, j]);\r\n    animations.push([i, j]);\r\n    if (order === \"asc\") {\r\n      while (j >= 0 && array[j] > current) {\r\n        array[j + 1] = array[j];\r\n\r\n        animations.push([j + 1, j]);\r\n        animations.push([j + 1, j]);\r\n        animations.push([j + 1, j, array[j + 1], current]);\r\n        j--;\r\n      }\r\n    } else {\r\n      while (j >= 0 && array[j] < current) {\r\n        array[j + 1] = array[j];\r\n\r\n        animations.push([j + 1, j]);\r\n        animations.push([j + 1, j]);\r\n        animations.push([j + 1, j, array[j + 1], current]);\r\n        j--;\r\n      }\r\n    }\r\n    array[j + 1] = current;\r\n    animations.push([j + 1, current, 0]);\r\n  }\r\n}\r\n\r\n//-------------------------------BUBBLE SORT-----------------------------\r\nexport function bubbleSortCall(array, order) {\r\n  const animation = [];\r\n  bubbleSort(array, animation, order);\r\n  return animation;\r\n}\r\n\r\nfunction bubbleSort(array, animation, order) {\r\n  for (var i = 0; i < array.length; i++) {\r\n    for (var j = 1; j < array.length - i; j++) {\r\n      animation.push([j - 1, j]);\r\n      animation.push([j - 1, j]);\r\n      animation.push([j - 1, j]);\r\n      if (order === \"asc\") {\r\n        if (array[j - 1] > array[j]) {\r\n          let temp = array[j - 1];\r\n          array[j - 1] = array[j];\r\n          array[j] = temp;\r\n          animation.push([j - 1, j, array[j - 1], array[j]]);\r\n        } else {\r\n          animation.push([j - 1, j, array[j - 1], array[j]]);\r\n        }\r\n      } else {\r\n        if (array[j - 1] < array[j]) {\r\n          let temp = array[j - 1];\r\n          array[j - 1] = array[j];\r\n          array[j] = temp;\r\n          animation.push([j - 1, j, array[j - 1], array[j]]);\r\n        } else {\r\n          animation.push([j - 1, j, array[j - 1], array[j]]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n//-------------------------------HEAP SORT----------------------------------\r\nvar length;\r\n/* to create MAX  array */\r\nexport function heapSortCall(array, order) {\r\n  const animations = [];\r\n  heapSort(array, animations, order);\r\n  return animations;\r\n}\r\n\r\nfunction heapSort(array, animations, order) {\r\n  length = array.length;\r\n\r\n  for (var i = Math.floor(length / 2); i >= 0; i -= 1) {\r\n    heap_root(array, animations, i, order);\r\n  }\r\n\r\n  for (i = array.length - 1; i > 0; i--) {\r\n    swap(array, 0, i);\r\n    length--;\r\n    animations.push([0,i, array[0], array[i]]);\r\n\r\n    heap_root(array, animations, 0, order);\r\n  }\r\n}\r\n\r\nfunction heap_root(array, animations, i, order) {\r\n  var l = 2 * i + 1;\r\n  var r = 2 * i + 2;\r\n  var largest = i;\r\n\r\n  if (order === \"asc\") {\r\n    if (l < length && array[l] > array[largest]) {\r\n      largest = l;\r\n      animations.push([i, l]);\r\n      animations.push([i, l]);\r\n      animations.push([i, l]);\r\n    }\r\n\r\n    if (r < length && array[r] > array[largest]) {\r\n      largest = r;\r\n      animations.push([i, r]);\r\n      animations.push([i, r]);\r\n      animations.push([i, r]);\r\n    }\r\n  }else{\r\n    \r\n    if (l < length && array[l] < array[largest]) {\r\n      largest = l;\r\n      animations.push([i, l]);\r\n      animations.push([i, l]);\r\n      animations.push([i, l]);\r\n    }\r\n  \r\n    if (r < length && array[r] < array[largest]) {\r\n      largest = r;\r\n      animations.push([i, r]);\r\n      animations.push([i, r]);\r\n      animations.push([i, r]);\r\n    }\r\n  }\r\n\r\n  if (largest != i) {\r\n    swap(array, i, largest);\r\n    animations.push([i, largest, array[i], array[largest], 0]);\r\n    heap_root(array, animations, largest,order);\r\n  }\r\n}\r\n\r\nfunction swap(input, index_A, index_B) {\r\n  var temp = input[index_A];\r\n\r\n  input[index_A] = input[index_B];\r\n  input[index_B] = temp;\r\n}\r\n\r\n//----------------------------------QUICKSORT-----------------------------------\r\nexport function QuickSortCall(array,order) {\r\n  const ani = {\r\n    animation: [],\r\n    animation2: [],\r\n  };\r\n\r\n  var l = 0;\r\n  var h = array.length;\r\n  QuickSort(array, l, h, ani.animation, ani.animation2,order);\r\n  return ani;\r\n}\r\n\r\nfunction QuickSort(array, l, h, animation, animation2,order) {\r\n  if (l < h) {\r\n    var j = partition(array, l, h, animation, animation2,order);\r\n\r\n    QuickSort(array, l, j, animation, animation2,order);\r\n    QuickSort(array, j + 1, h, animation, animation2,order);\r\n  }\r\n}\r\n\r\nfunction partition(array, l, h, animation, animation2,order) {\r\n  const pivot = array[l];\r\n  var i = l;\r\n  var j = h;\r\n\r\n  while (i < j) {\r\n    if(order==='asc'){\r\n      do {\r\n        i++;\r\n        animation2.push(i);\r\n        animation2.push(i);\r\n      } while (array[i] <= pivot);\r\n      do {\r\n        j--;\r\n        animation2.push(j);\r\n        animation2.push(j);\r\n      } while (array[j] > pivot);\r\n    }\r\n    else{\r\n      do {\r\n        i++;\r\n        animation2.push(i);\r\n        animation2.push(i);\r\n      } while (array[i] >= pivot);\r\n      do {\r\n        j--;\r\n        animation2.push(j);\r\n        animation2.push(j);\r\n      } while (array[j] < pivot);\r\n    }\r\n    if (i < j) {\r\n      animation.push([i, j]);\r\n      animation.push([i, j]);\r\n      animation.push([i, j]);\r\n      \r\n      let temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n      // animation.push([i, j, array[i], array[j]]);\r\n      animation.push([i, j, array[i], array[j]]);\r\n    }\r\n  }\r\n\r\n  let temp = array[l];\r\n  array[l] = array[j];\r\n  array[j] = temp;\r\n\r\n  animation.push([l, j]);\r\n  animation.push([l, j]);\r\n  animation.push([l, j]);\r\n  // animation.push([l, j, array[l], array[j]],0);\r\n  animation.push([l, j, array[l], array[j],0]);\r\n\r\n  return j;\r\n}\r\n\r\n//---------------------------------------------MERGE SORT-----------------------------------------------------//\r\n\r\nexport function mergeSort(array,order) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxiliaryArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations,order);\r\n  return animations;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n  mainArray,\r\n  startIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations,order\r\n) {\r\n  if (startIdx === endIdx) return;\r\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations,order);\r\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations,order);\r\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations,order);\r\n}\r\n\r\nfunction doMerge(\r\n  mainArray,\r\n  startIdx,\r\n  middleIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations,order\r\n) {\r\n  let k = startIdx;\r\n  let i = startIdx;\r\n  let j = middleIdx + 1;\r\n  while (i <= middleIdx && j <= endIdx) {\r\n    // These are the values that we're comparing; we push them once\r\n    // to change their color.\r\n    animations.push([i, j,0]);\r\n    // These are the values that we're comparing; we push them a second\r\n    // time to revert their color.\r\n    animations.push([i, j,0]);\r\n    animations.push([i, j,0]);\r\n    if(order==='asc'){\r\n      if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n        // We overwrite the value at index k in the original array with the\r\n        // value at index i in the auxiliary array.\r\n        animations.push([k,i, auxiliaryArray[i],0]);\r\n        mainArray[k++] = auxiliaryArray[i++];\r\n      } else {\r\n        // We overwrite the value at index k in the original array with the\r\n        // value at index j in the auxiliary array.\r\n        animations.push([k,j, auxiliaryArray[j],0]);\r\n        mainArray[k++] = auxiliaryArray[j++];\r\n      }\r\n    }else{\r\n      if (auxiliaryArray[i] >= auxiliaryArray[j]) {\r\n        // We overwrite the value at index k in the original array with the\r\n        // value at index i in the auxiliary array.\r\n        animations.push([k,i, auxiliaryArray[i],0]);\r\n        mainArray[k++] = auxiliaryArray[i++];\r\n      } else {\r\n        // We overwrite the value at index k in the original array with the\r\n        // value at index j in the auxiliary array.\r\n        animations.push([k,j, auxiliaryArray[j],0]);\r\n        mainArray[k++] = auxiliaryArray[j++];\r\n      }\r\n    }\r\n  }\r\n  while (i <= middleIdx) {\r\n    // These are the values that we're comparing; we push them once\r\n    // to change their color.\r\n    animations.push([i, i]);\r\n    // These are the values that we're comparing; we push them a second\r\n    // time to revert their color.\r\n    animations.push([i, i]);\r\n    animations.push([i, i]);\r\n    // We overwrite the value at index k in the original array with the\r\n    // value at index i in the auxiliary array.\r\n    animations.push([k,i, auxiliaryArray[i],0]);\r\n    mainArray[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIdx) {\r\n    // These are the values that we're comparing; we push them once\r\n    // to change their color.\r\n    animations.push([j, j]);\r\n    // These are the values that we're comparing; we push them a second\r\n    // time to revert their color.\r\n    animations.push([j, j]);\r\n    animations.push([j, j]);\r\n    // We overwrite the value at index k in the original array with the\r\n    // value at index j in the auxiliary array.\r\n    animations.push([k,j, auxiliaryArray[j],0]);\r\n    mainArray[k++] = auxiliaryArray[j++];\r\n  }\r\n}\r\n","import \"./styles/SortingVisualizer.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport * as SortingAlgorithms from \"./SortingAlogorithms.js\";\r\n\r\nconst TIMER = 10;\r\nvar timer;\r\n\r\nfunction SortingVisualizer() {\r\n  const [array, setArray] = useState([]);\r\n  const [disableButton, setdisableButton] = useState(false);\r\n  const [auxArray, setAuxArray] = useState([]);\r\n  const [slider, setSlider] = useState(51);\r\n  const [width, setWidth] = useState(4);\r\n  const [order, setOrder] = useState(\"asc\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"disabling effect called\");\r\n    setdisableButton(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Reset array Effect called\");\r\n    var array = resetArray();\r\n    setArray(array);\r\n    var auxArray = array.map((v) => v);\r\n    setAuxArray(auxArray);\r\n  }, [slider]);\r\n\r\n  const resetArray = () => {\r\n    console.log(\"reset func called\");\r\n    var array = [];\r\n\r\n    if (slider <= 30) {\r\n      for (let i = 0; i < 25; i++) {\r\n        array.push(randomNumbers(5, window.screen.height - 300));\r\n      }\r\n      setWidth(35);\r\n    } else if (slider > 25 && slider <= 50) {\r\n      for (let i = 0; i < 70; i++) {\r\n        array.push(randomNumbers(5, window.screen.height - 300));\r\n      }\r\n      setWidth(15);\r\n    } else if (slider > 50 && slider <= 75) {\r\n      for (let i = 0; i < 110; i++) {\r\n        array.push(randomNumbers(5, window.screen.height - 300));\r\n      }\r\n      setWidth(6);\r\n    } else {\r\n      for (let i = 0; i < 150; i++) {\r\n        array.push(randomNumbers(5, window.screen.height - 300));\r\n      }\r\n      if (window.screen.width < 1090) {\r\n        setWidth(8);\r\n      } else {\r\n        setWidth(3);\r\n      }\r\n    }\r\n    changeColor();\r\n    var auxArray = array.map((v) => v);\r\n    setAuxArray(auxArray);\r\n\r\n    return array;\r\n  };\r\n\r\n  const changeColor = () => {\r\n    const arr = array;\r\n    const arrayBars = document.getElementsByClassName(\"array-bars\");\r\n    for (let i = 0; i < arr.length; i++) {\r\n      const barStyle = arrayBars[i].style;\r\n      barStyle.backgroundColor = \"turquoise\";\r\n    }\r\n  };\r\n\r\n  const stopAndReset = () => {\r\n    clearTimeout(timer);\r\n    setArray(resetArray());\r\n  };\r\n\r\n  const mergeSort = () => {\r\n    setdisableButton(true);\r\n    const animations = SortingAlgorithms.mergeSort(auxArray, order);\r\n    // console.log(animations);\r\n\r\n    const arrayBars = document.getElementsByClassName(\"array-bars\");\r\n    var myNum = 1;\r\n    for (let i = 0; i < animations.length; i++) {\r\n      if (animations[i].length === 3) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        if (myNum === 1) {\r\n          myNum = 2;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = \"red\";\r\n            barTwoStyle.backgroundColor = \"red\";\r\n          }, i * TIMER);\r\n        } else if (myNum === 2) {\r\n          myNum = 3;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = \"yellow\";\r\n            barTwoStyle.backgroundColor = \"yellow\";\r\n          }, i * TIMER);\r\n        } else if (myNum === 3) {\r\n          myNum = 1;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = \"turquoise\";\r\n            barTwoStyle.backgroundColor = \"turquoise\";\r\n          }, i * TIMER);\r\n        }\r\n      } else if (animations[i].length === 4) {\r\n        timer = setTimeout(() => {\r\n          const [barOneIdx, barTwoIdx, newHeight, ,] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const barTwoStyle = arrayBars[barTwoIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n          barOneStyle.backgroundColor = \"#ff9ee6\";\r\n          barTwoStyle.backgroundColor = \"#ff9ee6\";\r\n        }, i * TIMER);\r\n      }\r\n      if (i === animations.length - 1) {\r\n        timer = setTimeout(() => {\r\n          setdisableButton(false);\r\n        }, i * TIMER + 100);\r\n      }\r\n    }\r\n  };\r\n\r\n  const quickSort = () => {\r\n    setdisableButton(true);\r\n    const ani = SortingAlgorithms.QuickSortCall(auxArray, order);\r\n    const animations = ani.animation;\r\n    const animations2 = ani.animation2;\r\n    console.log(animations);\r\n\r\n    const arrayBars = document.getElementsByClassName(\"array-bars\");\r\n    var isChange = true;\r\n    var myNum = 1;\r\n    for (let i = 0; i < animations.length; i++) {\r\n      if (animations[i].length === 4) {\r\n        const [barOneIdx, barTwoIdx, small, large] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        setTimeout(() => {\r\n          barOneStyle.height = `${small}px`;\r\n          barTwoStyle.height = `${large}px`;\r\n        }, i * TIMER);\r\n      } else if (animations[i].length === 5) {\r\n        const [barOneIdx, barTwoIdx, small, large, ,] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        setTimeout(() => {\r\n          barOneStyle.height = `${small}px`;\r\n          barTwoStyle.height = `${large}px`;\r\n          barTwoStyle.backgroundColor = \"#ff9ee6\";\r\n          if (i === animations.length - 1) {\r\n            barTwoStyle.backgroundColor = \"#ff9ee6\";\r\n          }\r\n        }, i * TIMER);\r\n      } else if (animations[i].length === 2) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        if (myNum === 1) {\r\n          myNum = 2;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = \"#ff0000\";\r\n            barTwoStyle.backgroundColor = \"#ff0000\";\r\n          }, i * TIMER);\r\n        } else if (myNum === 2) {\r\n          myNum = 3;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = \"yellow\";\r\n            barTwoStyle.backgroundColor = \"yellow\";\r\n          }, i * TIMER);\r\n        } else {\r\n          myNum = 1;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = \"turquoise\";\r\n            barTwoStyle.backgroundColor = \"turquoise\";\r\n          }, i * TIMER);\r\n        }\r\n      }\r\n      if (i === animations.length - 1) {\r\n        setTimeout(() => {\r\n          setdisableButton(false);\r\n        }, i * TIMER + 1000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const bubbleSort = () => {\r\n    setdisableButton(true);\r\n    const animations = SortingAlgorithms.bubbleSortCall(auxArray, order);\r\n    var myNum = 1;\r\n    const arrayBars = document.getElementsByClassName(\"array-bars\");\r\n    for (let i = 0; i < animations.length; i++) {\r\n      if (animations[i].length === 4) {\r\n        const [barOneIdx, barTwoIdx, small, large] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        setTimeout(() => {\r\n          barOneStyle.height = `${small}px`;\r\n          barTwoStyle.height = `${large}px`;\r\n          barTwoStyle.backgroundColor = \"#ff9ee6\";\r\n          if (i === animations.length - 1) {\r\n            barOneStyle.backgroundColor = \"#ff9ee6\";\r\n          }\r\n        }, i * TIMER);\r\n      } else if (animations[i].length === 2) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        if (myNum === 1) {\r\n          myNum = 2;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = \"red\";\r\n            barTwoStyle.backgroundColor = \"red\";\r\n          }, i * TIMER);\r\n        } else if (myNum === 2) {\r\n          myNum = 3;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = \"yellow\";\r\n            barTwoStyle.backgroundColor = \"ywllow\";\r\n          }, i * TIMER);\r\n        } else {\r\n          myNum = 1;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = \"turquoise\";\r\n            barTwoStyle.backgroundColor = \"turquoise\";\r\n          }, i * TIMER);\r\n        }\r\n      }\r\n      if (i === animations.length - 1) {\r\n        setTimeout(() => {\r\n          setdisableButton(false);\r\n        }, i * TIMER + 1000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const heapSort = () => {\r\n    setdisableButton(true);\r\n    const animations = SortingAlgorithms.heapSortCall(auxArray, order);\r\n    var myNum = 1;\r\n    const arrayBars = document.getElementsByClassName(\"array-bars\");\r\n    for (let i = 0; i < animations.length; i++) {\r\n      // console.log(animations[i].length);\r\n      if (animations[i].length === 4) {\r\n        const [barOneIdx, barTwoIdx, small, large] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        setTimeout(() => {\r\n          barOneStyle.height = `${small}px`;\r\n          barTwoStyle.height = `${large}px`;\r\n          barTwoStyle.backgroundColor = \"red\";\r\n          setTimeout(() => {\r\n            barTwoStyle.backgroundColor = \"#ff9ee6\";\r\n          }, i * 0.1);\r\n          if (i === animations.length - 1) {\r\n            barOneStyle.backgroundColor = \"#ff9ee6\";\r\n          }\r\n          // barTwoStyle.backgroundColor = \"red\";\r\n        }, i * TIMER);\r\n      } else if (animations[i].length === 2) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        if (myNum === 1) {\r\n          myNum = 2;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = \"red\";\r\n            barTwoStyle.backgroundColor = \"red\";\r\n          }, i * TIMER);\r\n        } else if (myNum === 2) {\r\n          myNum = 3;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = \"yellow\";\r\n            barTwoStyle.backgroundColor = \"yellow\";\r\n          }, i * TIMER);\r\n        } else if (myNum === 3) {\r\n          myNum = 1;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = \"turquoise\";\r\n            barTwoStyle.backgroundColor = \"turquoise\";\r\n          }, i * TIMER);\r\n        }\r\n      } else {\r\n        const [barOneIdx, barTwoIdx, h1, h2, ,] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        setTimeout(() => {\r\n          barOneStyle.height = `${h1}px`;\r\n          barTwoStyle.height = `${h2}px`;\r\n        }, i * TIMER);\r\n      }\r\n\r\n      if (i === animations.length - 1) {\r\n        setTimeout(() => {\r\n          setdisableButton(false);\r\n        }, i * TIMER + 1000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const insertionSort = () => {\r\n    setdisableButton(true);\r\n    const animations = SortingAlgorithms.insertionSortCall(auxArray, order);\r\n    var isChange = true;\r\n    const arrayBars = document.getElementsByClassName(\"array-bars\");\r\n    for (let i = 0; i < animations.length; i++) {\r\n      if (animations[i].length === 2) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        if (isChange) {\r\n          isChange = false;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = \"red\";\r\n            barTwoStyle.backgroundColor = \"red\";\r\n          }, i * TIMER);\r\n        } else {\r\n          isChange = true;\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = \"#95e775\";\r\n            barTwoStyle.backgroundColor = \"#95e775\";\r\n          }, i * TIMER);\r\n        }\r\n      } else if (animations[i].length === 4) {\r\n        const [barOneIdx, barTwoIdx, small, large] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        setTimeout(() => {\r\n          barOneStyle.height = `${small}px`;\r\n          barTwoStyle.height = `${large}px`;\r\n          barOneStyle.backgroundColor = \"#ff9ee6\";\r\n          barTwoStyle.backgroundColor = \"#ff9ee6\";\r\n          arrayBars[0].style.backgroundColor = \"#ff9ee6\";\r\n        }, i * TIMER);\r\n        // } else {\r\n        //   const [barOneIdx, h, ,] = animations[i];\r\n        //   const barOneStyle = arrayBars[barOneIdx].style;\r\n        //   setTimeout(() => {\r\n        //     barOneStyle.backgroundColor = \"#ff00ea\";\r\n        //     // setTimeout(() => {\r\n        //     //   barOneStyle.backgroundColor = \"#ff9ee6\";\r\n        //     // }, 1000);\r\n        //   }, i * TIMER);\r\n      }\r\n      if (i === animations.length - 1) {\r\n        setTimeout(() => {\r\n          setdisableButton(false);\r\n        }, i * TIMER + 1000);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"nav-bar\">\r\n        <button\r\n          className=\"reset\"\r\n          disabled={disableButton}\r\n          onClick={() => setArray(resetArray())}\r\n        >\r\n          Reset Array\r\n        </button>\r\n        {/* <button className=\"s-reset\" onClick={() => stopAndReset()}>\r\n          Stop And Reset\r\n        </button> */}\r\n        <input\r\n          disabled={disableButton}\r\n          type=\"range\"\r\n          className=\"slider\"\r\n          value={slider}\r\n          min=\"0\"\r\n          max=\"100\"\r\n          onChange={(e) => {\r\n            setSlider(e.target.value);\r\n            setArray(array);\r\n          }}\r\n        />\r\n        <div className=\"ord\">\r\n          <input\r\n            disabled={disableButton}\r\n            type=\"checkbox\"\r\n            className=\"asc\"\r\n            name=\"asc\"\r\n            value=\"asc\"\r\n            checked={order === \"asc\" ? true : false}\r\n            onChange={(e) => setOrder(e.target.value)}\r\n          />\r\n          <label className=\"asc\" htmlFor=\"asc\">\r\n            ASC\r\n          </label>\r\n          <input\r\n            disabled={disableButton}\r\n            type=\"checkbox\"\r\n            className=\"dsc\"\r\n            id=\"dscc\"\r\n            name=\"dsc\"\r\n            value=\"dsc\"\r\n            checked={order === \"dsc\" ? true : false}\r\n            onChange={(e) => setOrder(e.target.value)}\r\n          />\r\n          <label className=\"dsc\" htmlFor=\"dsc\">\r\n            DSC\r\n          </label>\r\n        </div>\r\n\r\n        <button\r\n          className=\"merge\"\r\n          onClick={() => mergeSort()}\r\n          disabled={disableButton}\r\n        >\r\n          Merge Sort\r\n        </button>\r\n        <button\r\n          className=\"quick\"\r\n          onClick={() => quickSort()}\r\n          disabled={disableButton}\r\n        >\r\n          Quick Sort\r\n        </button>\r\n        <button\r\n          className=\"bubble\"\r\n          onClick={() => bubbleSort()}\r\n          disabled={disableButton}\r\n        >\r\n          Bubble Sort\r\n        </button>\r\n        <button\r\n          className=\"heap\"\r\n          onClick={() => heapSort()}\r\n          disabled={disableButton}\r\n        >\r\n          Heap Sort\r\n        </button>\r\n        <button\r\n          className=\"insertion\"\r\n          onClick={() => insertionSort()}\r\n          disabled={disableButton}\r\n        >\r\n          Insertion Sort\r\n        </button>\r\n      </div>\r\n      <div className=\"array-container\">\r\n        {array.map((bar, idx) => (\r\n          <div\r\n            className=\"array-bars\"\r\n            key={idx}\r\n            style={{\r\n              height: `${bar}px`,\r\n              width: `${width}px`,\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n      <div className=\"down-bar\">\r\n        <div className=\"text\">Project By Mehtab Alam Khan</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction randomNumbers(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nexport default SortingVisualizer;\r\n","import SortingVisualizer from \"./Components/SortingVisualizer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}